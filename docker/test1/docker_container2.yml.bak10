---
- name: Docker Container 2 - Web Deploy + SQL Database
  hosts: servers
  become: yes
  
  tasks:
    - name: Gather information about Docker containers
      command: docker ps -aq
      register: docker_container_ids
      changed_when: false
      ignore_errors: yes

    - name: Stop and remove Docker containers
      docker_container:
        name: "{{ item }}"
        state: absent
      loop: "{{ docker_container_ids.stdout_lines }}"

    - name: Stop UFW service
      ansible.builtin.service:
        name: ufw
        state: stopped

    - name: Uninstall UFW
      ansible.builtin.apt:
        name: ufw
        state: absent

    - name: Create Directory
      file:
        path: /home/website2/
        state: directory
        mode: '0755'

    - name: Copy Dockerfile Configuration File
      copy:
        src: web2_dockerfile.conf.j2
        dest: /home/website2/Dockerfile
        mode: '0644'

    - name: Copy Template File >> index.php
      template:
        src: web2_index_php_conf.j2
        dest: /home/website2/index.php
        mode: '0644'

    - name: Build Custom Docker Image >> my-web2-php:7.4-apache >> Host1 & Host2 Task
      command: docker build -t my-web2-php:7.4-apache /home/website2
      when: inventory_hostname == 'host1' or inventory_hostname == 'host2'

    - name: Run Second Website Custom PHP 7.4 Docker Container >> Host1 & Host2 Task
      docker_container:
        name: my-web2-php-container
        image: my-web2-php:7.4-apache
        ports:
          - "8080:80"
        detach: yes
      when: inventory_hostname == 'host1' or inventory_hostname == 'host2'

    - name: Run MySQL Database Docker Container >> Host3 Task
      docker_container:
        name: mysql-container
        image: mysql:latest
        detach: yes
        env:
          MYSQL_ROOT_PASSWORD: my-secret-password
        ports:
          - "3306:3306"
        command: "--bind-address=0.0.0.0"
      when: inventory_hostname == 'host3'

    - name: Update Package Cache >> Host3 Task
      apt:
        update_cache: yes
      when: inventory_hostname == 'host3'

    - name: Install required packages >> Host3 Task
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-client
      when: inventory_hostname == 'host3'  

    - name: Copy Script File >> Host3 Task
      template:
        src: web2_bash_script_conf.j2
        dest: /home/website2/script.sh
        mode: '0644'
      when: inventory_hostname == 'host3'

    - name: Execute Shell Script >> Host3 Task
      shell: sudo bash /home/website2/script.sh
      when: inventory_hostname == 'host3'

    - name: Delete temp folder /home/website2/
      file:
        path: /home/website2/
        state: absent

    - name: Run Docker ps -a
      command: docker ps -a
      register: docker_ps_result

    - name: Display Docker ps -a Result
      debug:
        var: docker_ps_result.stdout_lines

    - name: Display Message >> Webserver >> Host1 & Host2
      debug:
        msg: "Check Webserver >> http://{{ ansible_default_ipv4.address }}:8080"
      when: inventory_hostname == 'host1' or inventory_hostname == 'host2'

    - name: Display Message >> MySQL Database >> Host3
      debug:
        msg: "MySQL Database >> {{ ansible_default_ipv4.address }} >> user:root >> pass:my-secret-password >> db:test table:visit_data"
      when: inventory_hostname == 'host3'

