---
- name: Docker Container 2 - Web Deploy + SQL Database
  hosts: host1
  become: yes
  
  tasks:
    - name: Gather information about Docker containers
      command: docker ps -aq
      register: docker_container_ids
      changed_when: false
      ignore_errors: yes

    - name: Stop and remove Docker containers
      docker_container:
        name: "{{ item }}"
        state: absent
      loop: "{{ docker_container_ids.stdout_lines }}"

    - name: Stop UFW service
      ansible.builtin.service:
        name: ufw
        state: stopped

    - name: Uninstall UFW
      ansible.builtin.apt:
        name: ufw
        state: absent

    - name: Create Directory
      file:
        path: /home/website1/
        state: directory
        mode: '0755'

    - name: Copy Dockerfile Configuration File
      copy:
        src: web2_dockerfile.conf.j2
        dest: /home/website1/Dockerfile
        mode: '0644'

    - name: Copy Template File >> index.php
      template:
        src: web2_index_php_conf.j2
        dest: /home/website1/index.php
        mode: '0644'

    - name: Build Custom Docker Image >> my-web2-php:7.4-apache >> Host1 & Host2 Task
      command: docker build -t my-web2-php:7.4-apache /home/website1
      when: inventory_hostname == 'host1' or inventory_hostname == 'host2'

    - name: Delete temp folder /home/website1/
      file:
        path: /home/website1/
        state: absent

    - name: Run Second Website Custom PHP 7.4 Docker Container >> Host1 & Host2 Task
      docker_container:
        name: my-web2-php-container
        image: my-web2-php:7.4-apache
        ports:
          - "8080:80"
        detach: yes
      when: inventory_hostname == 'host1' or inventory_hostname == 'host2'

    - name: Run MySQL Database Docker Container
      docker_container:
        name: mysql-container
        image: mysql:latest
        detach: yes
        env:
          MYSQL_ROOT_PASSWORD: my-secret-password
        ports:
          - "3306:3306"
        command: "--bind-address=0.0.0.0"
      when: inventory_hostname == 'host1'

    - name: Update Package Cache
      apt:
        update_cache: yes
      when: inventory_hostname == 'host1'

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-client
      when: inventory_hostname == 'host1'  

    - name: Execute SQL commands
      command: "echo 'CREATE DATABASE IF NOT EXISTS test; USE test; CREATE TABLE IF NOT EXISTS info (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL);' | mysql -h 192.168.244.170 -P 3306 -uroot -pmy-secret-password"
      when: inventory_hostname == 'host1'

    - name: Insert data into MySQL
      command: "echo 'INSERT INTO test.info (name, email) VALUES (\"John Doe\", \"john.doe@example.com\"), (\"Jane Smith\", \"jane.smith@example.com\");' | mysql -h 192.168.244.170 -P 3306 -uroot -pmy-secret-password"
      when: inventory_hostname == 'host1'

